OpenSpending="OpenSpending"in window?OpenSpending:{},function(a){OpenSpending.Treemap=function(b,c,d){var e=this,f=[OpenSpending.scriptRoot+"/widgets/treemap/js/thejit-2.min.js",OpenSpending.scriptRoot+"/widgets/treemap/css/treemap.css"];window.HTMLCanvasElement||f.push(OpenSpending.scriptRoot+"/widgets/treemap/js/excanvas.js"),e.context=a.extend({click:function(a){if(a.data.link){var b=c.embed?a.data.link+"?embed=true":a.data.link;document.location.href=b}},hasClick:function(a){return void 0!==a.data.link},createLabel:function(a,b,c){c.data.value/e.total>.03&&(b.innerHTML="<div class='desc'><div class='amount'>"+OpenSpending.Utils.formatAmountWithCommas(c.data.value,0,e.currency)+"</div><div class='lbl'>"+c.name+"</div></div>")},tooltipMessage:function(a,b){var c=100*b.data.value/a.total;return b.name+" ("+OpenSpending.Utils.formatAmountWithCommas(c,2)+"%)"},drilldown:function(a){e.drilldown(a)}},c),e.state=d,this.configure=function(a){e.$qb.empty();new OpenSpending.Widgets.QueryBuilder(e.$qb,e.update,a,e.context,[{variable:"drilldowns",label:"Tiles:",type:"select","default":e.state.drilldowns,help:"Each selected dimension will display as an additional level of tiles for the treemap."},{variable:"year",label:"Year:",type:"slider",dimension:"time",attribute:"year","default":e.state.year,help:"Filter by year."},{variable:"cuts",label:"Filters:",type:"cuts","default":e.state.cuts,help:"Limit the set of data to display."}])},this.update=function(a){e.state=a,e.state.drilldowns=e.state.drilldowns||[e.state.drilldown],e.state.cuts=e.state.cuts||{};var b=[];for(var c in e.state.cuts)b.push(c+":"+e.state.cuts[c]);e.state.year&&b.push("time.year:"+e.state.year),"undefined"!=typeof e.context.member&&"undefined"!=typeof e.context.dimension&&b.push(e.context.dimension+":"+e.context.member),e.state.drilldowns&&(e.aggregator=new OpenSpending.Aggregator({siteUrl:e.context.siteUrl,dataset:e.context.dataset,drilldowns:e.state.drilldowns,cuts:b,rootNodeLabel:"Total",callback:function(a){e.setDataFromAggregator(this.dataset,a)}}))},this.getDownloadURL=function(){return e.aggregator.getCSVURL()},this.serialize=function(){return e.state},this.init=function(){e.$e=b,e.$e.before('<div class="treemap-qb"></div>'),e.$qb=b.prev(),e.$e.addClass("treemap-widget"),e.update(d)},this.setDataFromAggregator=function(a,b){e.currency=b.currency,e.setNode(b)},this.setNode=function(b){var c=!0;e.total=b.amount,e.data={children:a.map(b.children,function(a){return a.color&&(c=!1),{children:[],id:a.id,name:a.label||a.name,data:{node:a,value:a.amount,$area:a.amount,title:a.label||a.name,link:a.html_url,name:a.name,$color:a.color||"#333333"}}})},c&&this.autoColorize(),e.draw()},this.drilldown=function(a){a.data.node.children.length?e.setNode(a.data.node):e.context.click(a)},this.autoColorize=function(){for(var a=e.data.children.length,b=OpenSpending.Utils.getColorPalette(a),c=0;a>c;c++)e.data.children[c].data.$color=b[c]},this.draw=function(){return e.$e.empty(),e.data.children.length?(a(e.$e).show(),e.tm=new $jit.TM.Squarified({injectInto:e.$e.prop("id"),levelsToShow:1,titleHeight:0,animate:!0,transition:$jit.Trans.Expo.easeOut,offset:2,Label:{type:"HTML",size:12,family:"Tahoma, Verdana, Arial",color:"#DDE7F0"},Node:{color:"#243448",CanvasStyles:{shadowBlur:0,shadowColor:"#000"}},Events:{enable:!0,onClick:function(a){a&&e.context.drilldown(a)},onRightClick:function(){e.tm.out()},onMouseEnter:function(a){a&&(e.context.hasClick(a)||e.$e.find("#"+a.id).css("cursor","default"),a.setCanvasStyle("shadowBlur",8),a.orig_color=a.getData("color"),a.setData("color","#A3B3C7"),e.tm.fx.plotNode(a,e.tm.canvas))},onMouseLeave:function(a){a&&(a.removeData("color"),a.removeCanvasStyle("shadowBlur"),a.setData("color",a.orig_color),e.tm.plot())}},duration:1e3,Tips:{enable:!0,type:"Native",offsetX:20,offsetY:20,onShow:function(a,b){{var c='<div class="tip-title">'+e.context.tooltipMessage(e,b)+'</div><div class="tip-text">';b.data}a.innerHTML=c}},request:function(a,b,c){var d=json,e=$jit.json.getSubtree(d,a);$jit.json.prune(e,1),c.onComplete(a,e)},onCreateLabel:function(a,b){e.context.createLabel(e,a,b)}}),e.tm.loadJSON(this.data),e.tm.refresh(),void 0):(a(e.$e).hide(),void 0)};var g=a.Deferred();return g.done(function(a){a.init()}),window.treemapWidgetLoaded?g.resolve(e):yepnope({load:f,complete:function(){window.treemapWidgetLoaded=!0,g.resolve(e)}}),g.promise()}}(jQuery);